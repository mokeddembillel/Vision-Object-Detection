# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import backend.utils as utils
import backend.video as video
import backend.scene as scene
import cv2
import os

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1363, 783)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: #36393F;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1361, 751))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("border: none;")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tabSimpleFilters = QtWidgets.QWidget()
        self.tabSimpleFilters.setObjectName("tabSimpleFilters")
        self.gViewSimpleLeft = QtWidgets.QGraphicsView(self.tabSimpleFilters)
        self.gViewSimpleLeft.setGeometry(QtCore.QRect(10, 10, 661, 411))
        self.gViewSimpleLeft.setStyleSheet("background-color: #202225;\n"
"border-radius: 5;")
        self.gViewSimpleLeft.setObjectName("gViewSimpleLeft")
        self.groupBox = QtWidgets.QGroupBox(self.tabSimpleFilters)
        self.groupBox.setGeometry(QtCore.QRect(170, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox.setFont(font)
        self.groupBox.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setFlat(True)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.sliderMean = QtWidgets.QSlider(self.groupBox)
        self.sliderMean.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderMean.setStyleSheet("")
        self.sliderMean.setMinimum(3)
        self.sliderMean.setMaximum(19)
        self.sliderMean.setSingleStep(2)
        self.sliderMean.setSliderPosition(3)
        self.sliderMean.setTracking(True)
        self.sliderMean.setOrientation(QtCore.Qt.Horizontal)
        self.sliderMean.setInvertedControls(False)
        self.sliderMean.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderMean.setTickInterval(2)
        self.sliderMean.setObjectName("sliderMean")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lblMeanKernelSize = QtWidgets.QLabel(self.groupBox)
        self.lblMeanKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblMeanKernelSize.setFont(font)
        self.lblMeanKernelSize.setObjectName("lblMeanKernelSize")
        self.buttMean = QtWidgets.QPushButton(self.groupBox)
        self.buttMean.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttMean.setFont(font)
        self.buttMean.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttMean.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttMean.setAutoDefault(False)
        self.buttMean.setDefault(False)
        self.buttMean.setFlat(False)
        self.buttMean.setObjectName("buttMean")
        self.gViewSimpleRight = QtWidgets.QGraphicsView(self.tabSimpleFilters)
        self.gViewSimpleRight.setGeometry(QtCore.QRect(690, 10, 661, 411))
        self.gViewSimpleRight.setStyleSheet("background-color: #202225;\n"
"border-radius:5;")
        self.gViewSimpleRight.setObjectName("gViewSimpleRight")
        self.buttLoadSimple = QtWidgets.QPushButton(self.tabSimpleFilters)
        self.buttLoadSimple.setGeometry(QtCore.QRect(20, 440, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttLoadSimple.setFont(font)
        self.buttLoadSimple.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttLoadSimple.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttLoadSimple.setAutoDefault(False)
        self.buttLoadSimple.setDefault(False)
        self.buttLoadSimple.setFlat(False)
        self.buttLoadSimple.setObjectName("buttLoadSimple")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tabSimpleFilters)
        self.groupBox_2.setGeometry(QtCore.QRect(570, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_2.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_2.setFlat(True)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.sliderMedian = QtWidgets.QSlider(self.groupBox_2)
        self.sliderMedian.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderMedian.setStyleSheet("")
        self.sliderMedian.setMinimum(3)
        self.sliderMedian.setMaximum(19)
        self.sliderMedian.setSingleStep(2)
        self.sliderMedian.setSliderPosition(3)
        self.sliderMedian.setTracking(True)
        self.sliderMedian.setOrientation(QtCore.Qt.Horizontal)
        self.sliderMedian.setInvertedControls(False)
        self.sliderMedian.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderMedian.setTickInterval(2)
        self.sliderMedian.setObjectName("sliderMedian")
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lblMedianKernelSize = QtWidgets.QLabel(self.groupBox_2)
        self.lblMedianKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblMedianKernelSize.setFont(font)
        self.lblMedianKernelSize.setObjectName("lblMedianKernelSize")
        self.buttMedian = QtWidgets.QPushButton(self.groupBox_2)
        self.buttMedian.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttMedian.setFont(font)
        self.buttMedian.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttMedian.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttMedian.setAutoDefault(False)
        self.buttMedian.setDefault(False)
        self.buttMedian.setFlat(False)
        self.buttMedian.setObjectName("buttMedian")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tabSimpleFilters)
        self.groupBox_3.setGeometry(QtCore.QRect(970, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_3.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_3.setFlat(True)
        self.groupBox_3.setCheckable(False)
        self.groupBox_3.setObjectName("groupBox_3")
        self.sliderGaussian = QtWidgets.QSlider(self.groupBox_3)
        self.sliderGaussian.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderGaussian.setStyleSheet("")
        self.sliderGaussian.setMinimum(3)
        self.sliderGaussian.setMaximum(19)
        self.sliderGaussian.setSingleStep(2)
        self.sliderGaussian.setSliderPosition(3)
        self.sliderGaussian.setTracking(True)
        self.sliderGaussian.setOrientation(QtCore.Qt.Horizontal)
        self.sliderGaussian.setInvertedControls(False)
        self.sliderGaussian.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderGaussian.setTickInterval(2)
        self.sliderGaussian.setObjectName("sliderGaussian")
        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        self.label_3.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lblGaussianKernelSize = QtWidgets.QLabel(self.groupBox_3)
        self.lblGaussianKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblGaussianKernelSize.setFont(font)
        self.lblGaussianKernelSize.setObjectName("lblGaussianKernelSize")
        self.buttGaussian = QtWidgets.QPushButton(self.groupBox_3)
        self.buttGaussian.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttGaussian.setFont(font)
        self.buttGaussian.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGaussian.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGaussian.setAutoDefault(False)
        self.buttGaussian.setDefault(False)
        self.buttGaussian.setFlat(False)
        self.buttGaussian.setObjectName("buttGaussian")
        self.label_4 = QtWidgets.QLabel(self.groupBox_3)
        self.label_4.setGeometry(QtCore.QRect(10, 150, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.textSigma = QtWidgets.QTextEdit(self.groupBox_3)
        self.textSigma.setGeometry(QtCore.QRect(80, 150, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.textSigma.setFont(font)
        self.textSigma.setStyleSheet("border: none;")
        self.textSigma.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textSigma.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textSigma.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.textSigma.setObjectName("textSigma")
        self.buttSaveSimple = QtWidgets.QPushButton(self.tabSimpleFilters)
        self.buttSaveSimple.setGeometry(QtCore.QRect(20, 550, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttSaveSimple.setFont(font)
        self.buttSaveSimple.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttSaveSimple.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttSaveSimple.setAutoDefault(False)
        self.buttSaveSimple.setDefault(False)
        self.buttSaveSimple.setFlat(False)
        self.buttSaveSimple.setObjectName("buttSaveSimple")
        self.tabWidget.addTab(self.tabSimpleFilters, "")
        self.tabGradient = QtWidgets.QWidget()
        self.tabGradient.setObjectName("tabGradient")
        self.groupBox_4 = QtWidgets.QGroupBox(self.tabGradient)
        self.groupBox_4.setGeometry(QtCore.QRect(570, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_4.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_4.setFlat(True)
        self.groupBox_4.setCheckable(False)
        self.groupBox_4.setObjectName("groupBox_4")
        self.sliderLaplacian = QtWidgets.QSlider(self.groupBox_4)
        self.sliderLaplacian.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderLaplacian.setStyleSheet("")
        self.sliderLaplacian.setMinimum(3)
        self.sliderLaplacian.setMaximum(19)
        self.sliderLaplacian.setSingleStep(2)
        self.sliderLaplacian.setSliderPosition(3)
        self.sliderLaplacian.setTracking(True)
        self.sliderLaplacian.setOrientation(QtCore.Qt.Horizontal)
        self.sliderLaplacian.setInvertedControls(False)
        self.sliderLaplacian.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderLaplacian.setTickInterval(2)
        self.sliderLaplacian.setObjectName("sliderLaplacian")
        self.label_9 = QtWidgets.QLabel(self.groupBox_4)
        self.label_9.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.lblLaplacianKernelSize = QtWidgets.QLabel(self.groupBox_4)
        self.lblLaplacianKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblLaplacianKernelSize.setFont(font)
        self.lblLaplacianKernelSize.setObjectName("lblLaplacianKernelSize")
        self.buttLaplacian = QtWidgets.QPushButton(self.groupBox_4)
        self.buttLaplacian.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttLaplacian.setFont(font)
        self.buttLaplacian.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttLaplacian.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttLaplacian.setAutoDefault(False)
        self.buttLaplacian.setDefault(False)
        self.buttLaplacian.setFlat(False)
        self.buttLaplacian.setObjectName("buttLaplacian")
        self.groupBox_5 = QtWidgets.QGroupBox(self.tabGradient)
        self.groupBox_5.setGeometry(QtCore.QRect(170, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_5.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_5.setFlat(True)
        self.groupBox_5.setCheckable(False)
        self.groupBox_5.setObjectName("groupBox_5")
        self.sliderGradient = QtWidgets.QSlider(self.groupBox_5)
        self.sliderGradient.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderGradient.setStyleSheet("")
        self.sliderGradient.setMinimum(3)
        self.sliderGradient.setMaximum(19)
        self.sliderGradient.setSingleStep(2)
        self.sliderGradient.setSliderPosition(3)
        self.sliderGradient.setTracking(True)
        self.sliderGradient.setOrientation(QtCore.Qt.Horizontal)
        self.sliderGradient.setInvertedControls(False)
        self.sliderGradient.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderGradient.setTickInterval(2)
        self.sliderGradient.setObjectName("sliderGradient")
        self.label_10 = QtWidgets.QLabel(self.groupBox_5)
        self.label_10.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.lblGradientKernelSize = QtWidgets.QLabel(self.groupBox_5)
        self.lblGradientKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblGradientKernelSize.setFont(font)
        self.lblGradientKernelSize.setObjectName("lblGradientKernelSize")
        self.buttGradient = QtWidgets.QPushButton(self.groupBox_5)
        self.buttGradient.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttGradient.setFont(font)
        self.buttGradient.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGradient.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGradient.setAutoDefault(False)
        self.buttGradient.setDefault(False)
        self.buttGradient.setFlat(False)
        self.buttGradient.setObjectName("buttGradient")
        self.gViewGradientLeft = QtWidgets.QGraphicsView(self.tabGradient)
        self.gViewGradientLeft.setGeometry(QtCore.QRect(10, 10, 661, 411))
        self.gViewGradientLeft.setStyleSheet("background-color: #202225;\n"
"border-radius: 5;")
        self.gViewGradientLeft.setObjectName("gViewGradientLeft")
        self.gViewGradientRight = QtWidgets.QGraphicsView(self.tabGradient)
        self.gViewGradientRight.setGeometry(QtCore.QRect(690, 10, 661, 411))
        self.gViewGradientRight.setStyleSheet("background-color: #202225;\n"
"border-radius:5;")
        self.gViewGradientRight.setObjectName("gViewGradientRight")
        self.buttLoadGradient = QtWidgets.QPushButton(self.tabGradient)
        self.buttLoadGradient.setGeometry(QtCore.QRect(20, 440, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttLoadGradient.setFont(font)
        self.buttLoadGradient.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttLoadGradient.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttLoadGradient.setAutoDefault(False)
        self.buttLoadGradient.setDefault(False)
        self.buttLoadGradient.setFlat(False)
        self.buttLoadGradient.setObjectName("buttLoadGradient")
        self.buttSaveGradient = QtWidgets.QPushButton(self.tabGradient)
        self.buttSaveGradient.setGeometry(QtCore.QRect(20, 550, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttSaveGradient.setFont(font)
        self.buttSaveGradient.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttSaveGradient.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttSaveGradient.setAutoDefault(False)
        self.buttSaveGradient.setDefault(False)
        self.buttSaveGradient.setFlat(False)
        self.buttSaveGradient.setObjectName("buttSaveGradient")
        self.tabWidget.addTab(self.tabGradient, "")
        self.tabErosion = QtWidgets.QWidget()
        self.tabErosion.setObjectName("tabErosion")
        self.groupBox_6 = QtWidgets.QGroupBox(self.tabErosion)
        self.groupBox_6.setGeometry(QtCore.QRect(170, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_6.setFont(font)
        self.groupBox_6.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_6.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_6.setFlat(True)
        self.groupBox_6.setCheckable(False)
        self.groupBox_6.setObjectName("groupBox_6")
        self.sliderErosion = QtWidgets.QSlider(self.groupBox_6)
        self.sliderErosion.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderErosion.setStyleSheet("")
        self.sliderErosion.setMinimum(3)
        self.sliderErosion.setMaximum(19)
        self.sliderErosion.setSingleStep(1)
        self.sliderErosion.setPageStep(10)
        self.sliderErosion.setSliderPosition(3)
        self.sliderErosion.setTracking(True)
        self.sliderErosion.setOrientation(QtCore.Qt.Horizontal)
        self.sliderErosion.setInvertedControls(False)
        self.sliderErosion.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderErosion.setTickInterval(2)
        self.sliderErosion.setObjectName("sliderErosion")
        self.label_11 = QtWidgets.QLabel(self.groupBox_6)
        self.label_11.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.lblErosionKernelSize = QtWidgets.QLabel(self.groupBox_6)
        self.lblErosionKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblErosionKernelSize.setFont(font)
        self.lblErosionKernelSize.setObjectName("lblErosionKernelSize")
        self.buttErosion = QtWidgets.QPushButton(self.groupBox_6)
        self.buttErosion.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttErosion.setFont(font)
        self.buttErosion.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttErosion.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttErosion.setAutoDefault(False)
        self.buttErosion.setDefault(False)
        self.buttErosion.setFlat(False)
        self.buttErosion.setObjectName("buttErosion")
        self.groupBox_7 = QtWidgets.QGroupBox(self.tabErosion)
        self.groupBox_7.setGeometry(QtCore.QRect(570, 440, 361, 261))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.groupBox_7.setFont(font)
        self.groupBox_7.setStyleSheet("color: #8E9297;\n"
"background-color: #202225;\n"
"border: none;\n"
"border-radius: 10;")
        self.groupBox_7.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_7.setFlat(True)
        self.groupBox_7.setCheckable(False)
        self.groupBox_7.setObjectName("groupBox_7")
        self.sliderDilatation = QtWidgets.QSlider(self.groupBox_7)
        self.sliderDilatation.setGeometry(QtCore.QRect(10, 100, 331, 22))
        self.sliderDilatation.setStyleSheet("")
        self.sliderDilatation.setMinimum(3)
        self.sliderDilatation.setMaximum(19)
        self.sliderDilatation.setSingleStep(2)
        self.sliderDilatation.setSliderPosition(3)
        self.sliderDilatation.setTracking(True)
        self.sliderDilatation.setOrientation(QtCore.Qt.Horizontal)
        self.sliderDilatation.setInvertedControls(False)
        self.sliderDilatation.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderDilatation.setTickInterval(2)
        self.sliderDilatation.setObjectName("sliderDilatation")
        self.label_12 = QtWidgets.QLabel(self.groupBox_7)
        self.label_12.setGeometry(QtCore.QRect(10, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.lblDilatationKernelSize = QtWidgets.QLabel(self.groupBox_7)
        self.lblDilatationKernelSize.setGeometry(QtCore.QRect(130, 60, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        self.lblDilatationKernelSize.setFont(font)
        self.lblDilatationKernelSize.setObjectName("lblDilatationKernelSize")
        self.buttDilatation = QtWidgets.QPushButton(self.groupBox_7)
        self.buttDilatation.setGeometry(QtCore.QRect(250, 200, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.buttDilatation.setFont(font)
        self.buttDilatation.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttDilatation.setStyleSheet("background-color: #2F3136;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttDilatation.setAutoDefault(False)
        self.buttDilatation.setDefault(False)
        self.buttDilatation.setFlat(False)
        self.buttDilatation.setObjectName("buttDilatation")
        self.gViewErosionRight = QtWidgets.QGraphicsView(self.tabErosion)
        self.gViewErosionRight.setGeometry(QtCore.QRect(690, 10, 661, 411))
        self.gViewErosionRight.setStyleSheet("background-color: #202225;\n"
"border-radius:5;")
        self.gViewErosionRight.setObjectName("gViewErosionRight")
        self.buttLoadErosion = QtWidgets.QPushButton(self.tabErosion)
        self.buttLoadErosion.setGeometry(QtCore.QRect(20, 440, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttLoadErosion.setFont(font)
        self.buttLoadErosion.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttLoadErosion.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttLoadErosion.setAutoDefault(False)
        self.buttLoadErosion.setDefault(False)
        self.buttLoadErosion.setFlat(False)
        self.buttLoadErosion.setObjectName("buttLoadErosion")
        self.gViewErosionLeft = QtWidgets.QGraphicsView(self.tabErosion)
        self.gViewErosionLeft.setGeometry(QtCore.QRect(10, 10, 661, 411))
        self.gViewErosionLeft.setStyleSheet("background-color: #202225;\n"
"border-radius: 5;")
        self.gViewErosionLeft.setObjectName("gViewErosionLeft")
        self.buttSaveErosion = QtWidgets.QPushButton(self.tabErosion)
        self.buttSaveErosion.setGeometry(QtCore.QRect(20, 550, 131, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttSaveErosion.setFont(font)
        self.buttSaveErosion.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttSaveErosion.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttSaveErosion.setAutoDefault(False)
        self.buttSaveErosion.setDefault(False)
        self.buttSaveErosion.setFlat(False)
        self.buttSaveErosion.setObjectName("buttSaveErosion")
        self.tabWidget.addTab(self.tabErosion, "")
        self.tabGeneration = QtWidgets.QWidget()
        self.tabGeneration.setObjectName("tabGeneration")
        self.sliderNoiseObjects = QtWidgets.QSlider(self.tabGeneration)
        self.sliderNoiseObjects.setGeometry(QtCore.QRect(20, 70, 491, 22))
        self.sliderNoiseObjects.setStyleSheet("")
        self.sliderNoiseObjects.setMinimum(0)
        self.sliderNoiseObjects.setMaximum(30)
        self.sliderNoiseObjects.setSingleStep(1)
        self.sliderNoiseObjects.setProperty("value", 0)
        self.sliderNoiseObjects.setSliderPosition(0)
        self.sliderNoiseObjects.setTracking(True)
        self.sliderNoiseObjects.setOrientation(QtCore.Qt.Horizontal)
        self.sliderNoiseObjects.setInvertedControls(False)
        self.sliderNoiseObjects.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderNoiseObjects.setTickInterval(1)
        self.sliderNoiseObjects.setObjectName("sliderNoiseObjects")
        self.label_13 = QtWidgets.QLabel(self.tabGeneration)
        self.label_13.setGeometry(QtCore.QRect(20, 20, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("color: #8E9297;")
        self.label_13.setObjectName("label_13")
        self.lblNoiseObjects = QtWidgets.QLabel(self.tabGeneration)
        self.lblNoiseObjects.setGeometry(QtCore.QRect(380, 20, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblNoiseObjects.setFont(font)
        self.lblNoiseObjects.setStyleSheet("color: #8E9297;")
        self.lblNoiseObjects.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblNoiseObjects.setObjectName("lblNoiseObjects")
        self.label_14 = QtWidgets.QLabel(self.tabGeneration)
        self.label_14.setGeometry(QtCore.QRect(20, 120, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("color: #8E9297;")
        self.label_14.setObjectName("label_14")
        self.sliderNoiseMaxSize = QtWidgets.QSlider(self.tabGeneration)
        self.sliderNoiseMaxSize.setGeometry(QtCore.QRect(20, 170, 491, 22))
        self.sliderNoiseMaxSize.setStyleSheet("")
        self.sliderNoiseMaxSize.setMinimum(50)
        self.sliderNoiseMaxSize.setMaximum(200)
        self.sliderNoiseMaxSize.setSingleStep(10)
        self.sliderNoiseMaxSize.setProperty("value", 50)
        self.sliderNoiseMaxSize.setSliderPosition(50)
        self.sliderNoiseMaxSize.setTracking(True)
        self.sliderNoiseMaxSize.setOrientation(QtCore.Qt.Horizontal)
        self.sliderNoiseMaxSize.setInvertedControls(False)
        self.sliderNoiseMaxSize.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderNoiseMaxSize.setTickInterval(10)
        self.sliderNoiseMaxSize.setObjectName("sliderNoiseMaxSize")
        self.lblNoiseMaxSize = QtWidgets.QLabel(self.tabGeneration)
        self.lblNoiseMaxSize.setGeometry(QtCore.QRect(380, 120, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblNoiseMaxSize.setFont(font)
        self.lblNoiseMaxSize.setStyleSheet("color: #8E9297;")
        self.lblNoiseMaxSize.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblNoiseMaxSize.setObjectName("lblNoiseMaxSize")
        self.sliderNumObjects = QtWidgets.QSlider(self.tabGeneration)
        self.sliderNumObjects.setGeometry(QtCore.QRect(20, 270, 491, 22))
        self.sliderNumObjects.setStyleSheet("")
        self.sliderNumObjects.setMinimum(0)
        self.sliderNumObjects.setMaximum(10)
        self.sliderNumObjects.setSingleStep(1)
        self.sliderNumObjects.setProperty("value", 0)
        self.sliderNumObjects.setSliderPosition(0)
        self.sliderNumObjects.setTracking(True)
        self.sliderNumObjects.setOrientation(QtCore.Qt.Horizontal)
        self.sliderNumObjects.setInvertedControls(False)
        self.sliderNumObjects.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderNumObjects.setTickInterval(1)
        self.sliderNumObjects.setObjectName("sliderNumObjects")
        self.label_15 = QtWidgets.QLabel(self.tabGeneration)
        self.label_15.setGeometry(QtCore.QRect(20, 220, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("color: #8E9297;")
        self.label_15.setObjectName("label_15")
        self.lblNumObjects = QtWidgets.QLabel(self.tabGeneration)
        self.lblNumObjects.setGeometry(QtCore.QRect(380, 220, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblNumObjects.setFont(font)
        self.lblNumObjects.setStyleSheet("color: #8E9297;")
        self.lblNumObjects.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblNumObjects.setObjectName("lblNumObjects")
        self.sliderPositionChange = QtWidgets.QSlider(self.tabGeneration)
        self.sliderPositionChange.setGeometry(QtCore.QRect(20, 370, 491, 22))
        self.sliderPositionChange.setStyleSheet("")
        self.sliderPositionChange.setMinimum(1)
        self.sliderPositionChange.setMaximum(20)
        self.sliderPositionChange.setSingleStep(1)
        self.sliderPositionChange.setProperty("value", 5)
        self.sliderPositionChange.setSliderPosition(5)
        self.sliderPositionChange.setTracking(True)
        self.sliderPositionChange.setOrientation(QtCore.Qt.Horizontal)
        self.sliderPositionChange.setInvertedControls(False)
        self.sliderPositionChange.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderPositionChange.setTickInterval(1)
        self.sliderPositionChange.setObjectName("sliderPositionChange")
        self.label_16 = QtWidgets.QLabel(self.tabGeneration)
        self.label_16.setGeometry(QtCore.QRect(20, 320, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("color: #8E9297;")
        self.label_16.setObjectName("label_16")
        self.lblPositionChange = QtWidgets.QLabel(self.tabGeneration)
        self.lblPositionChange.setGeometry(QtCore.QRect(380, 320, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblPositionChange.setFont(font)
        self.lblPositionChange.setStyleSheet("color: #8E9297;")
        self.lblPositionChange.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblPositionChange.setObjectName("lblPositionChange")
        self.sliderVideoDuration = QtWidgets.QSlider(self.tabGeneration)
        self.sliderVideoDuration.setGeometry(QtCore.QRect(20, 470, 491, 22))
        self.sliderVideoDuration.setStyleSheet("")
        self.sliderVideoDuration.setMinimum(1)
        self.sliderVideoDuration.setMaximum(20)
        self.sliderVideoDuration.setSingleStep(1)
        self.sliderVideoDuration.setProperty("value", 10)
        self.sliderVideoDuration.setSliderPosition(10)
        self.sliderVideoDuration.setTracking(True)
        self.sliderVideoDuration.setOrientation(QtCore.Qt.Horizontal)
        self.sliderVideoDuration.setInvertedControls(False)
        self.sliderVideoDuration.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderVideoDuration.setTickInterval(1)
        self.sliderVideoDuration.setObjectName("sliderVideoDuration")
        self.label_17 = QtWidgets.QLabel(self.tabGeneration)
        self.label_17.setGeometry(QtCore.QRect(20, 420, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color: #8E9297;")
        self.label_17.setObjectName("label_17")
        self.lblVideoDuration = QtWidgets.QLabel(self.tabGeneration)
        self.lblVideoDuration.setGeometry(QtCore.QRect(380, 420, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblVideoDuration.setFont(font)
        self.lblVideoDuration.setStyleSheet("color: #8E9297;")
        self.lblVideoDuration.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblVideoDuration.setObjectName("lblVideoDuration")
        self.sliderVideoFPS = QtWidgets.QSlider(self.tabGeneration)
        self.sliderVideoFPS.setGeometry(QtCore.QRect(20, 570, 491, 22))
        self.sliderVideoFPS.setStyleSheet("")
        self.sliderVideoFPS.setMinimum(10)
        self.sliderVideoFPS.setMaximum(120)
        self.sliderVideoFPS.setSingleStep(10)
        self.sliderVideoFPS.setProperty("value", 20)
        self.sliderVideoFPS.setSliderPosition(20)
        self.sliderVideoFPS.setTracking(True)
        self.sliderVideoFPS.setOrientation(QtCore.Qt.Horizontal)
        self.sliderVideoFPS.setInvertedControls(False)
        self.sliderVideoFPS.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderVideoFPS.setTickInterval(10)
        self.sliderVideoFPS.setObjectName("sliderVideoFPS")
        self.label_18 = QtWidgets.QLabel(self.tabGeneration)
        self.label_18.setGeometry(QtCore.QRect(20, 520, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("color: #8E9297;")
        self.label_18.setObjectName("label_18")
        self.lblVideoFPS = QtWidgets.QLabel(self.tabGeneration)
        self.lblVideoFPS.setGeometry(QtCore.QRect(380, 520, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblVideoFPS.setFont(font)
        self.lblVideoFPS.setStyleSheet("color: #8E9297;")
        self.lblVideoFPS.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblVideoFPS.setObjectName("lblVideoFPS")
        self.buttGenerationGenerate = QtWidgets.QPushButton(self.tabGeneration)
        self.buttGenerationGenerate.setGeometry(QtCore.QRect(550, 560, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttGenerationGenerate.setFont(font)
        self.buttGenerationGenerate.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGenerationGenerate.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGenerationGenerate.setAutoDefault(False)
        self.buttGenerationGenerate.setDefault(False)
        self.buttGenerationGenerate.setFlat(False)
        self.buttGenerationGenerate.setObjectName("buttGenerationGenerate")
        self.buttGenerationPause = QtWidgets.QPushButton(self.tabGeneration)
        self.buttGenerationPause.setGeometry(QtCore.QRect(750, 560, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttGenerationPause.setFont(font)
        self.buttGenerationPause.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGenerationPause.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGenerationPause.setAutoDefault(False)
        self.buttGenerationPause.setDefault(False)
        self.buttGenerationPause.setFlat(False)
        self.buttGenerationPause.setObjectName("buttGenerationPause")
        self.buttGenerationPlay = QtWidgets.QPushButton(self.tabGeneration)
        self.buttGenerationPlay.setGeometry(QtCore.QRect(950, 560, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttGenerationPlay.setFont(font)
        self.buttGenerationPlay.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGenerationPlay.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGenerationPlay.setAutoDefault(False)
        self.buttGenerationPlay.setDefault(False)
        self.buttGenerationPlay.setFlat(False)
        self.buttGenerationPlay.setObjectName("buttGenerationPlay")
        self.buttGenerationSave = QtWidgets.QPushButton(self.tabGeneration)
        self.buttGenerationSave.setGeometry(QtCore.QRect(1150, 560, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttGenerationSave.setFont(font)
        self.buttGenerationSave.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttGenerationSave.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttGenerationSave.setAutoDefault(False)
        self.buttGenerationSave.setDefault(False)
        self.buttGenerationSave.setFlat(False)
        self.buttGenerationSave.setObjectName("buttGenerationSave")
        self.lblReboundSpeed = QtWidgets.QLabel(self.tabGeneration)
        self.lblReboundSpeed.setGeometry(QtCore.QRect(380, 620, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.lblReboundSpeed.setFont(font)
        self.lblReboundSpeed.setStyleSheet("color: #8E9297;")
        self.lblReboundSpeed.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lblReboundSpeed.setObjectName("lblReboundSpeed")
        self.sliderReboundSpeed = QtWidgets.QSlider(self.tabGeneration)
        self.sliderReboundSpeed.setGeometry(QtCore.QRect(20, 670, 491, 22))
        self.sliderReboundSpeed.setStyleSheet("")
        self.sliderReboundSpeed.setMinimum(1)
        self.sliderReboundSpeed.setMaximum(5)
        self.sliderReboundSpeed.setSingleStep(1)
        self.sliderReboundSpeed.setProperty("value", 1)
        self.sliderReboundSpeed.setSliderPosition(1)
        self.sliderReboundSpeed.setTracking(True)
        self.sliderReboundSpeed.setOrientation(QtCore.Qt.Horizontal)
        self.sliderReboundSpeed.setInvertedControls(False)
        self.sliderReboundSpeed.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderReboundSpeed.setTickInterval(1)
        self.sliderReboundSpeed.setObjectName("sliderReboundSpeed")
        self.label_19 = QtWidgets.QLabel(self.tabGeneration)
        self.label_19.setGeometry(QtCore.QRect(20, 620, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.label_19.setFont(font)
        self.label_19.setStyleSheet("color: #8E9297;")
        self.label_19.setObjectName("label_19")
        self.gViewGeneration = QtWidgets.QGraphicsView(self.tabGeneration)
        self.gViewGeneration.setGeometry(QtCore.QRect(540, 20, 800, 500))
        self.gViewGeneration.setStyleSheet("background-color:#202225;\n"
"border-radius:5;")
        self.gViewGeneration.setObjectName("gViewGeneration")
        self.lblButtonGenerationGenerate = QtWidgets.QLabel(self.tabGeneration)
        self.lblButtonGenerationGenerate.setGeometry(QtCore.QRect(550, 650, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.lblButtonGenerationGenerate.setFont(font)
        self.lblButtonGenerationGenerate.setStyleSheet("color: #8E9297;")
        self.lblButtonGenerationGenerate.setText("")
        self.lblButtonGenerationGenerate.setAlignment(QtCore.Qt.AlignCenter)
        self.lblButtonGenerationGenerate.setObjectName("lblButtonGenerationGenerate")
        self.lblButtonGenerationPause = QtWidgets.QLabel(self.tabGeneration)
        self.lblButtonGenerationPause.setGeometry(QtCore.QRect(750, 650, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.lblButtonGenerationPause.setFont(font)
        self.lblButtonGenerationPause.setStyleSheet("color: #8E9297;")
        self.lblButtonGenerationPause.setText("")
        self.lblButtonGenerationPause.setAlignment(QtCore.Qt.AlignCenter)
        self.lblButtonGenerationPause.setObjectName("lblButtonGenerationPause")
        self.lblButtonGenerationPlay = QtWidgets.QLabel(self.tabGeneration)
        self.lblButtonGenerationPlay.setGeometry(QtCore.QRect(950, 650, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.lblButtonGenerationPlay.setFont(font)
        self.lblButtonGenerationPlay.setStyleSheet("color: #8E9297;")
        self.lblButtonGenerationPlay.setText("")
        self.lblButtonGenerationPlay.setAlignment(QtCore.Qt.AlignCenter)
        self.lblButtonGenerationPlay.setObjectName("lblButtonGenerationPlay")
        self.lblButtonGenerationSave = QtWidgets.QLabel(self.tabGeneration)
        self.lblButtonGenerationSave.setGeometry(QtCore.QRect(1150, 650, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        self.lblButtonGenerationSave.setFont(font)
        self.lblButtonGenerationSave.setStyleSheet("color: #8E9297;")
        self.lblButtonGenerationSave.setText("")
        self.lblButtonGenerationSave.setAlignment(QtCore.Qt.AlignCenter)
        self.lblButtonGenerationSave.setObjectName("lblButtonGenerationSave")
        self.tabWidget.addTab(self.tabGeneration, "")
        self.tabTracking = QtWidgets.QWidget()
        self.tabTracking.setObjectName("tabTracking")
        self.buttTrackingLoad = QtWidgets.QPushButton(self.tabTracking)
        self.buttTrackingLoad.setGeometry(QtCore.QRect(290, 550, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttTrackingLoad.setFont(font)
        self.buttTrackingLoad.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttTrackingLoad.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttTrackingLoad.setAutoDefault(False)
        self.buttTrackingLoad.setDefault(False)
        self.buttTrackingLoad.setFlat(False)
        self.buttTrackingLoad.setObjectName("buttTrackingLoad")
        self.buttTrackingTrack = QtWidgets.QPushButton(self.tabTracking)
        self.buttTrackingTrack.setGeometry(QtCore.QRect(490, 550, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttTrackingTrack.setFont(font)
        self.buttTrackingTrack.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttTrackingTrack.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttTrackingTrack.setAutoDefault(False)
        self.buttTrackingTrack.setDefault(False)
        self.buttTrackingTrack.setFlat(False)
        self.buttTrackingTrack.setObjectName("buttTrackingTrack")
        self.gViewTracking = QtWidgets.QGraphicsView(self.tabTracking)
        self.gViewTracking.setGeometry(QtCore.QRect(280, 40, 800, 500))
        self.gViewTracking.setStyleSheet("background-color:#202225;\n"
"border-radius:5;")
        self.gViewTracking.setObjectName("gViewTracking")
        self.buttTrackingPlay = QtWidgets.QPushButton(self.tabTracking)
        self.buttTrackingPlay.setGeometry(QtCore.QRect(690, 550, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttTrackingPlay.setFont(font)
        self.buttTrackingPlay.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttTrackingPlay.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttTrackingPlay.setAutoDefault(False)
        self.buttTrackingPlay.setDefault(False)
        self.buttTrackingPlay.setFlat(False)
        self.buttTrackingPlay.setObjectName("buttTrackingPlay")
        self.buttTrackingSave = QtWidgets.QPushButton(self.tabTracking)
        self.buttTrackingSave.setGeometry(QtCore.QRect(890, 550, 181, 81))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.buttTrackingSave.setFont(font)
        self.buttTrackingSave.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttTrackingSave.setStyleSheet("background-color: #202225;\n"
"color: #8E9297;\n"
"border-radius: 20;")
        self.buttTrackingSave.setAutoDefault(False)
        self.buttTrackingSave.setDefault(False)
        self.buttTrackingSave.setFlat(False)
        self.buttTrackingSave.setObjectName("buttTrackingSave")
        self.tabWidget.addTab(self.tabTracking, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1363, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # START MY MEMBERS
        self.originalImage = None
        self.filteredImage1 = None
        self.filteredImage2 = None
        self.filteredImage3 = None

        self.framesGeneration = None
        self.now_frame_generation = 0
        self.FPS_generation = 0

        self.framesTracking = None
        self.now_frame_tracking = 0
        self.FPS_tracking = 0

        self.itemGeneration = QtWidgets.QGraphicsPixmapItem()
        self.itemTracking = QtWidgets.QGraphicsPixmapItem()
        self.sceneGeneration = QtWidgets.QGraphicsScene()
        self.sceneTracking = QtWidgets.QGraphicsScene()
        self.originalImage_frame_generation = QtWidgets.QLabel()
        self.originalImage_frame_tracking = QtWidgets.QLabel()

        self.itemOrg1 = QtWidgets.QGraphicsPixmapItem()
        self.itemOrg2 = QtWidgets.QGraphicsPixmapItem()
        self.itemOrg3 = QtWidgets.QGraphicsPixmapItem()
        self.sceneOrg1 = QtWidgets.QGraphicsScene()
        self.sceneOrg2 = QtWidgets.QGraphicsScene()
        self.sceneOrg3 = QtWidgets.QGraphicsScene()

        self.itemFilt1 = QtWidgets.QGraphicsPixmapItem()
        self.itemFilt2 = QtWidgets.QGraphicsPixmapItem()
        self.itemFilt3 = QtWidgets.QGraphicsPixmapItem()
        self.sceneFilt1 = QtWidgets.QGraphicsScene()
        self.sceneFilt2 = QtWidgets.QGraphicsScene()
        self.sceneFilt3 = QtWidgets.QGraphicsScene()

        self.dialog = QtWidgets.QFileDialog()

        self.originalImage_frame_org = QtWidgets.QLabel()
        self.originalImage_frame_filt1 = QtWidgets.QLabel()
        self.originalImage_frame_filt2 = QtWidgets.QLabel()
        self.originalImage_frame_filt3 = QtWidgets.QLabel()

        self.trackingLabels = False
        self.trackingPaused = True
        # END MY MEMBERS

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Mean Filter"))
        self.label.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblMeanKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttMean.setText(_translate("MainWindow", "Apply"))
        self.buttLoadSimple.setText(_translate("MainWindow", "Load"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Median Filter"))
        self.label_2.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblMedianKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttMedian.setText(_translate("MainWindow", "Apply"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Gaussian Filter"))
        self.label_3.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblGaussianKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttGaussian.setText(_translate("MainWindow", "Apply"))
        self.label_4.setText(_translate("MainWindow", "Sigma:"))
        self.textSigma.setHtml(_translate("MainWindow",
                                          "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                          "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                          "p, li { white-space: pre-wrap; }\n"
                                          "</style></head><body style=\" font-family:\'Comic Sans MS\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
                                          "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1</p></body></html>"))
        self.buttSaveSimple.setText(_translate("MainWindow", "Save"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabSimpleFilters),
                                  _translate("MainWindow", "Simple Filters"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Laplacian Filter"))
        self.label_9.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblLaplacianKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttLaplacian.setText(_translate("MainWindow", "Apply"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Gradient Filter"))
        self.label_10.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblGradientKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttGradient.setText(_translate("MainWindow", "Apply"))
        self.buttLoadGradient.setText(_translate("MainWindow", "Load"))
        self.buttSaveGradient.setText(_translate("MainWindow", "Save"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabGradient),
                                  _translate("MainWindow", "Gradient Laplacian"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Erosion"))
        self.label_11.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblErosionKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttErosion.setText(_translate("MainWindow", "Apply"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Dilatation"))
        self.label_12.setText(_translate("MainWindow", "Kernel Size: "))
        self.lblDilatationKernelSize.setText(_translate("MainWindow", "3x3"))
        self.buttDilatation.setText(_translate("MainWindow", "Apply"))
        self.buttLoadErosion.setText(_translate("MainWindow", "Load"))
        self.buttSaveErosion.setText(_translate("MainWindow", "Save"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabErosion),
                                  _translate("MainWindow", "Erosion Dilatation"))
        self.label_13.setText(_translate("MainWindow", "Number of Noise Objects:"))
        self.lblNoiseObjects.setText(_translate("MainWindow", "0"))
        self.label_14.setText(_translate("MainWindow", "Maximum Size for Noise:"))
        self.lblNoiseMaxSize.setText(_translate("MainWindow", "50"))
        self.label_15.setText(_translate("MainWindow", "Number of Objects:"))
        self.lblNumObjects.setText(_translate("MainWindow", "0"))
        self.label_16.setText(_translate("MainWindow", "Position Change (seconds):"))
        self.lblPositionChange.setText(_translate("MainWindow", "5"))
        self.label_17.setText(_translate("MainWindow", "Video Duration (seconds):"))
        self.lblVideoDuration.setText(_translate("MainWindow", "10"))
        self.label_18.setText(_translate("MainWindow", "Frames per Second:"))
        self.lblVideoFPS.setText(_translate("MainWindow", "20"))
        self.buttGenerationGenerate.setText(_translate("MainWindow", "Generate"))
        self.buttGenerationPause.setText(_translate("MainWindow", "Pause"))
        self.buttGenerationPlay.setText(_translate("MainWindow", "Play"))
        self.buttGenerationSave.setText(_translate("MainWindow", "Save"))
        self.lblReboundSpeed.setText(_translate("MainWindow", "1"))
        self.label_19.setText(_translate("MainWindow", "Rebound Speed (trolling):"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabGeneration),
                                  _translate("MainWindow", "Video Generation"))
        self.buttTrackingLoad.setText(_translate("MainWindow", "Load"))
        self.buttTrackingTrack.setText(_translate("MainWindow", "Track y/n"))
        self.buttTrackingPlay.setText(_translate("MainWindow", "Play/pause"))
        self.buttTrackingSave.setText(_translate("MainWindow", "Save"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTracking),
                                  _translate("MainWindow", "Video Tracking"))

        # START MY EVENT LISTENERS
        self.sliderMean.valueChanged.connect(lambda: changeLabel(self, 1))
        self.sliderMedian.valueChanged.connect(lambda: changeLabel(self, 2))
        self.sliderGaussian.valueChanged.connect(lambda: changeLabel(self, 3))
        self.sliderGradient.valueChanged.connect(lambda: changeLabel(self, 4))
        self.sliderLaplacian.valueChanged.connect(lambda: changeLabel(self, 5))
        self.sliderErosion.valueChanged.connect(lambda: changeLabel(self, 6))
        self.sliderDilatation.valueChanged.connect(lambda: changeLabel(self, 7))

        self.buttLoadSimple.clicked.connect(lambda: loadImage(self))
        self.buttLoadGradient.clicked.connect(lambda: loadImage(self))
        self.buttLoadErosion.clicked.connect(lambda: loadImage(self))
        self.buttMean.clicked.connect(lambda: filterMean(self, size=self.sliderMean.value()))
        self.buttMedian.clicked.connect(lambda: filterMedian(self, size=self.sliderMedian.value()))
        self.buttGaussian.clicked.connect(
            lambda: filterGaussian(self, size=self.sliderGaussian.value(), sigma=float(self.textSigma.toPlainText())))
        self.buttGradient.clicked.connect(lambda: filterGradient(self, size=self.sliderGradient.value()))
        self.buttLaplacian.clicked.connect(lambda: filterLaplacian(self, size=self.sliderLaplacian.value()))
        self.buttErosion.clicked.connect(lambda: filterErosion(self, size=self.sliderErosion.value()))
        self.buttDilatation.clicked.connect(lambda: filterDilatation(self, size=self.sliderDilatation.value()))

        self.sliderNoiseObjects.valueChanged.connect(lambda: changeLabelGeneration(self, 1))
        self.sliderNoiseMaxSize.valueChanged.connect(lambda: changeLabelGeneration(self, 2))
        self.sliderNumObjects.valueChanged.connect(lambda: changeLabelGeneration(self, 3))
        self.sliderPositionChange.valueChanged.connect(lambda: changeLabelGeneration(self, 4))
        self.sliderVideoDuration.valueChanged.connect(lambda: changeLabelGeneration(self, 5))
        self.sliderVideoFPS.valueChanged.connect(lambda: changeLabelGeneration(self, 6))
        self.sliderReboundSpeed.valueChanged.connect(lambda: changeLabelGeneration(self, 7))

        self.buttSaveSimple.clicked.connect(lambda: saveImage(self, 1))
        self.buttSaveGradient.clicked.connect(lambda: saveImage(self, 2))
        self.buttSaveErosion.clicked.connect(lambda: saveImage(self, 3))

        self.buttGenerationSave.clicked.connect(lambda: saveGenerationVideo(self))
        self.buttGenerationGenerate.clicked.connect(lambda: generateGenerationVideo(self))
        self.buttGenerationPlay.clicked.connect(lambda: playGenerationVideo(self))
        self.buttGenerationPause.clicked.connect(lambda: pauseGenerationVideo(self))

        self.buttTrackingLoad.clicked.connect(lambda: loadTrackingVideo(self))
        self.buttTrackingTrack.clicked.connect(lambda: startTracking(self))
        self.buttTrackingPlay.clicked.connect(lambda: playPause(self))
        self.buttTrackingSave.clicked.connect(lambda: saveTrackedVideo(self))

        # END MY EVENT LISTENERS

    def playNextFrameGeneration(self):

        if self.now_frame_generation >= len(self.framesGeneration):
            self.now_frame_generation = 0

        image = self.framesGeneration[self.now_frame_generation]
        showImageIntoGeneration(self, image)
        self.now_frame_generation += 1



    def startTimerGeneration(self):
        self.timerGeneration = QtCore.QTimer()
        self.timerGeneration.timeout.connect(self.playNextFrameGeneration)
        self.timerGeneration.start(1000.0 / self.FPS_generation)

    def pauseTimerGeneration(self):
        self.timerGeneration.stop()

    def startTimerTracking(self):
        self.timerTracking = QtCore.QTimer()
        self.timerTracking.timeout.connect(self.playNextFrameTracking)
        self.timerTracking.start(1000.0 / self.FPS_tracking)

    def pauseTimerTracking(self):
        self.timerTracking.stop()

    def playNextFrameTracking(self):

        if self.trackingPaused:
            return


        if self.now_frame_tracking >= len(self.framesTracking):
            self.now_frame_tracking = 0

        image = self.framesTracking[self.now_frame_tracking]
        showImageIntoTracking(self, video.write_info_img(image) if self.trackingLabels else image)
        self.now_frame_tracking += 1


def startTracking(self):
    self.trackingLabels = not self.trackingLabels


def playPause(self):
    self.trackingPaused = not self.trackingPaused


def saveTrackedVideo(self):
    fileName = prepareFileNameForSaveVideo(self)
    if fileName is None:
        print("fileName is none... exiting...")
        return

    fileName = fileName[0]
    if fileName[-4:].lower() != ".avi":
        fileName += ".avi"

    temp_list = []

    for untrackedFrame in self.framesTracking:
        temp_list.append(video.write_info_img(untrackedFrame))

    video.write_video(fileName, temp_list, self.FPS_tracking)


def loadImage(self):
    url = self.dialog.getOpenFileName(self.dialog, "Open Image File", "", "Images (*.png *.bmp *.jpg)")
    if len(url[0]) == 0:
        return

    u = url[0]
    u = os.path.normpath(u)

    image = cv2.imread(u)
    self.originalImage = image

    showImageIntoOriginal(self)


def prepareFileNameForSave(self):
    fileName = self.dialog.getSaveFileName(self.dialog, "Save image to", "result.png", "*.png")
    return fileName

def prepareFileNameForSaveVideo(self):
    fileName = self.dialog.getSaveFileName(self.dialog, "Save video to", "result.avi", "*.avi")
    return fileName


def saveImageWithOpencv(self, image, path):
    cv2.imwrite(path, image)


def saveImage(self, num):
    if num == 1 and self.filteredImage1 is None:
        return
    if num == 2 and self.filteredImage2 is None:
        return
    if num == 3 and self.filteredImage3 is None:
        return

    fileName = prepareFileNameForSave(self)
    if fileName is None:
        print("fileName is none... exiting...")
        return

    fileName = fileName[0]
    if fileName[-4:].lower() != ".png":
        fileName += ".png"

    if num == 1:
        saveImageWithOpencv(self, self.filteredImage1, fileName)
    elif num == 2:
        saveImageWithOpencv(self, self.filteredImage2, fileName)
    elif num == 3:
        saveImageWithOpencv(self, self.filteredImage3, fileName)


def generateGenerationVideo(obj):
    obj.lblButtonGenerationGenerate.setText("Please wait...")
    numNoiseObjects = obj.sliderNoiseObjects.value()
    maxSizeNoise = obj.sliderNoiseMaxSize.value()
    numObjects = obj.sliderNumObjects.value()
    positionChange = obj.sliderPositionChange.value()
    videoDuration = obj.sliderVideoDuration.value()
    videoFPS = obj.sliderVideoFPS.value()
    reboundSpeed = obj.sliderReboundSpeed.value()

    frames_list = video.generate_video(
        num_noises=numNoiseObjects,
        num_objects=numObjects,
        time=videoDuration,
        fps=videoFPS,
        delay_change_noise=positionChange,
        maxSizeNoise=maxSizeNoise
    )
    affectGeneratedScene(obj, frames=frames_list, fps=videoFPS)
    obj.lblButtonGenerationGenerate.setText("Video generated")

def loadTrackingVideo(obj):

    url = loadTracking(obj)
    if len(url) == 0:
        return

    frames_list, videoFPS = video.read_video_with_fps(url)

    affectToBeTrackedScene(obj, frames=frames_list, fps=videoFPS)
    if obj.framesTracking is not None and obj.FPS_tracking > 0:
        image = obj.framesTracking[0]
        showImageIntoTracking(obj, image)

    trackTracking(obj)


def affectGeneratedScene(self, frames=None, fps=0):
    self.framesGeneration = frames
    self.now_frame_generation = 0
    self.FPS_generation = fps


def affectToBeTrackedScene(self, frames=None, fps=0):
    self.framesTracking = frames
    self.now_frame_tracking = 0
    self.FPS_tracking = fps


def playGeneratedScene(self):
    if self.framesGeneration is None:
        return
    if len(self.framesGeneration) == 0:
        return
    if self.FPS_generation == 0:
        return

    self.startTimerGeneration()


def playTrackingScene(self):
    if self.framesTracking is None:
        return
    if len(self.framesTracking) == 0:
        return
    if self.FPS_tracking == 0:
        return

    self.startTimerTracking()


def saveGenerationVideo(self):
    self.lblButtonGenerationSave.setText("Saving file...")
    fileName = prepareFileNameForSaveVideo(self)
    if fileName is None:
        print("fileName is none... exiting...")
        return

    fileName = fileName[0]
    if fileName[-4:].lower() != ".avi":
        fileName += ".avi"

    video.write_video(fileName, self.framesGeneration, self.FPS_generation)
    self.lblButtonGenerationSave.setText("File saved.")
    self.lblButtonGenerationGenerate.setText("")


def playGenerationVideo(self):

    if self.framesGeneration is None:
        self.lblButtonGenerationPause.setText("")
        self.lblButtonGenerationPlay.setText("")


    self.lblButtonGenerationPause.setText("")
    self.lblButtonGenerationPlay.setText("Video playing")
    playGeneratedScene(self)


def pauseGenerationVideo(self):
    self.lblButtonGenerationPause.setText("Video Paused")
    self.lblButtonGenerationPlay.setText("")
    self.pauseTimerGeneration()


def loadTracking(self):
    url = self.dialog.getOpenFileName(self.dialog, "Open Video File", "", "Videos (*.avi)")
    return url[0]


def trackTracking(self):
    playTrackingScene(self)


def showImageIntoOriginal(self):
    resized = cv2.resize(self.originalImage,
                         (self.gViewSimpleLeft.size().width(), self.gViewSimpleLeft.size().height()))
    img = QtGui.QImage(resized.data, resized.shape[1], resized.shape[0], 3 * resized.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()

    self.itemOrg1.setPixmap(QtGui.QPixmap.fromImage(img))
    self.itemOrg2.setPixmap(QtGui.QPixmap.fromImage(img))
    self.itemOrg3.setPixmap(QtGui.QPixmap.fromImage(img))

    self.sceneOrg1.addItem(self.itemOrg1)
    self.sceneOrg2.addItem(self.itemOrg2)
    self.sceneOrg3.addItem(self.itemOrg3)

    self.gViewSimpleLeft.setScene(self.sceneOrg1)
    self.gViewGradientLeft.setScene(self.sceneOrg2)
    self.gViewErosionLeft.setScene(self.sceneOrg3)


def showImageIntoGeneration(self, image):
    img = QtGui.QImage(image.data, image.shape[1], image.shape[0], 3 * image.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()
    self.itemGeneration.setPixmap(QtGui.QPixmap.fromImage(img))
    self.sceneGeneration.addItem(self.itemGeneration)
    self.gViewGeneration.setScene(self.sceneGeneration)

def showImageIntoTracking(self, image):
    img = QtGui.QImage(image.data, image.shape[1], image.shape[0], 3 * image.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()
    self.itemTracking.setPixmap(QtGui.QPixmap.fromImage(img))
    self.sceneTracking.addItem(self.itemTracking)
    self.gViewTracking.setScene(self.sceneTracking)

def showImageIntoFilter1(self, image):
    resized = cv2.resize(image, (self.gViewSimpleRight.size().width(), self.gViewSimpleRight.size().height()))
    img = QtGui.QImage(resized.data, resized.shape[1], resized.shape[0], 3 * resized.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()
    self.itemFilt1.setPixmap(QtGui.QPixmap.fromImage(img))
    self.sceneFilt1.addItem(self.itemFilt1)
    self.gViewSimpleRight.setScene(self.sceneFilt1)


def showImageIntoFilter2(self, image):
    resized = cv2.resize(image, (self.gViewGradientRight.size().width(), self.gViewGradientRight.size().height()))
    img = QtGui.QImage(resized.data, resized.shape[1], resized.shape[0], 3 * resized.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()
    self.itemFilt2.setPixmap(QtGui.QPixmap.fromImage(img))
    self.sceneFilt2.addItem(self.itemFilt2)
    self.gViewGradientRight.setScene(self.sceneFilt2)


def showImageIntoFilter3(self, image):
    resized = cv2.resize(image, (self.gViewErosionRight.size().width(), self.gViewErosionRight.size().height()))
    img = QtGui.QImage(resized.data, resized.shape[1], resized.shape[0], 3 * resized.shape[1],
                       QtGui.QImage.Format_RGB888).rgbSwapped()
    self.itemFilt3.setPixmap(QtGui.QPixmap.fromImage(img))
    self.sceneFilt3.addItem(self.itemFilt3)
    self.gViewErosionRight.setScene(self.sceneFilt3)


def filterMean(self, size):
    img = utils.mean_filter(self.originalImage, size)
    self.filteredImage1 = img
    showImageIntoFilter1(self, self.filteredImage1)


def filterMedian(self, size):
    img = utils.median_filter(self.originalImage, size)
    self.filteredImage1 = img
    showImageIntoFilter1(self, self.filteredImage1)


def filterGaussian(self, size, sigma):
    img = utils.gaussian_filter(self.originalImage, size, sigma=sigma)
    self.filteredImage1 = img
    showImageIntoFilter1(self, self.filteredImage1)


def filterGradient(self, size):
    img = utils.gradient(self.originalImage, size)
    self.filteredImage2 = img
    showImageIntoFilter2(self, self.filteredImage2)


def filterLaplacian(self, size):
    img = utils.laplacian(self.originalImage, size)
    self.filteredImage2 = img
    showImageIntoFilter2(self, self.filteredImage2)


def filterErosion(self, size):
    img = utils.erosion(self.originalImage, size)
    self.filteredImage3 = img
    showImageIntoFilter3(self, self.filteredImage3)


def filterDilatation(self, size):
    img = utils.dilation(self.originalImage, size)
    self.filteredImage3 = img
    showImageIntoFilter3(self, self.filteredImage3)


def changeLabel(self, num):
    if num == 1:
        self.sliderMean.setValue(
            self.sliderMean.value() if self.sliderMean.value() % 2 == 1 else self.sliderMean.value() - 1)
        self.lblMeanKernelSize.setText(str(self.sliderMean.value()) + "x" + str(self.sliderMean.value()))
    elif num == 2:
        self.sliderMedian.setValue(
            self.sliderMedian.value() if self.sliderMedian.value() % 2 == 1 else self.sliderMedian.value() - 1)
        self.lblMedianKernelSize.setText(str(self.sliderMedian.value()) + "x" + str(self.sliderMedian.value()))
    elif num == 3:
        self.sliderGaussian.setValue(
            self.sliderGaussian.value() if self.sliderGaussian.value() % 2 == 1 else self.sliderGaussian.value() - 1)
        self.lblGaussianKernelSize.setText(str(self.sliderGaussian.value()) + "x" + str(self.sliderGaussian.value()))
    elif num == 4:
        self.sliderGradient.setValue(
            self.sliderGradient.value() if self.sliderGradient.value() % 2 == 1 else self.sliderGradient.value() - 1)
        self.lblGradientKernelSize.setText(str(self.sliderGradient.value()) + "x" + str(self.sliderGradient.value()))
    elif num == 5:
        self.sliderLaplacian.setValue(
            self.sliderLaplacian.value() if self.sliderLaplacian.value() % 2 == 1 else self.sliderLaplacian.value() - 1)
        self.lblLaplacianKernelSize.setText(str(self.sliderLaplacian.value()) + "x" + str(self.sliderLaplacian.value()))
    elif num == 6:
        self.sliderErosion.setValue(
            self.sliderErosion.value() if self.sliderErosion.value() % 2 == 1 else self.sliderErosion.value() - 1)
        self.lblErosionKernelSize.setText(str(self.sliderErosion.value()) + "x" + str(self.sliderErosion.value()))
    elif num == 7:
        self.sliderDilatation.setValue(
            self.sliderDilatation.value() if self.sliderDilatation.value() % 2 == 1 else self.sliderDilatation.value() - 1)
        self.lblDilatationKernelSize.setText(
            str(self.sliderDilatation.value()) + "x" + str(self.sliderDilatation.value()))


def changeLabelGeneration(self, num):
    if num == 1:
        self.lblNoiseObjects.setText(str(self.sliderNoiseObjects.value()))
    if num == 2:
        var = self.sliderNoiseMaxSize.value()
        var = int(var / 10) * 10
        self.sliderNoiseMaxSize.setValue(var)
        self.lblNoiseMaxSize.setText(str(self.sliderNoiseMaxSize.value()))
    if num == 3:
        self.lblNumObjects.setText(str(self.sliderNumObjects.value()))
    if num == 4:
        self.lblPositionChange.setText(str(self.sliderPositionChange.value()))
    if num == 5:
        self.lblVideoDuration.setText(str(self.sliderVideoDuration.value()))
    if num == 6:
        var = self.sliderVideoFPS.value()
        var = int(var / 10) * 10
        self.sliderVideoFPS.setValue(var)
        self.lblVideoFPS.setText(str(self.sliderVideoFPS.value()))
    if num == 7:
        self.lblReboundSpeed.setText(str(self.sliderReboundSpeed.value()))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
